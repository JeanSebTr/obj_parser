/* 
 * File:   ModelLoader.h
 * Author: jeansebtr
 *
 * Created on 12 f√©vrier 2011, 23:41
 */

#include <string>
#include <vector>

#include "Model.h"


#ifndef _MODELLOADER_H
#define	_MODELLOADER_H


struct VertexListNode
{
    Vertex v;
    VertexListNode* next;
};

struct FaceListNode
{
    Face f;
    FaceListNode* next;
};


struct ModelComponents
{
    std::string name;
    Vertex* v;
    int nbVertex;
    Face* f;
    int nbFace;
};

class ModelLoader {
public:
    static bool Load(Model *model, std::string file);

private:
    ModelLoader();
    ModelLoader(const ModelLoader& orig);
    virtual ~ModelLoader();

    static std::vector<ModelComponents*> models;

    static ModelComponents* LoadFromFile(std::string file);
    static Vertex ReadVertex(char **pos, const char *end);
    static Face ReadFace(char **pos, const char *end);


    static char* NextLine(const char* debut, const char* max);
    static char* NextWhiteSpace(const char* debut, const char* max);
};

#endif	/* _MODELLOADER_H */

